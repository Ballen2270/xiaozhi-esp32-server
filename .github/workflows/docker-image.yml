name: Docker Image CI

on:
  push:
    tags:
      - 'v*.*.*'  # 只在以 v 开头的标签推送时触发，例如 v1.0.0
  workflow_dispatch:

jobs:
  release:
    name: Release Docker images
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
      id-token: write
      issues: write
    steps:
      - name: Check Disk Space
        run: |
          df -h
          docker system df

      - name: Clean up Docker resources
        run: |
          docker system prune -af
          docker builder prune -af

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract version from tag and set repository name
        id: get_version
        run: |
          if [[ "$GITHUB_REF" =~ ^refs/tags/v([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
            echo "VERSION=${BASH_REMATCH[1]}" >> $GITHUB_ENV
            echo "IS_VERSION=true" >> $GITHUB_ENV
          else
            echo "VERSION=latest" >> $GITHUB_ENV
            echo "IS_VERSION=false" >> $GITHUB_ENV
          fi
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

      # 构建 xiaozhi-server 镜像
      - name: Build and push xiaozhi-server
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile-server
          push: true
          tags: |
            ${{ env.IS_VERSION == 'true' && format('docker.io/{0}:server_{1}\ndocker.io/{0}:server_latest', env.REPO_NAME, env.VERSION) || format('docker.io/{0}:server_latest', env.REPO_NAME) }}
          platforms: linux/amd64,linux/arm64

      # 构建 manager-api 镜像
      - name: Build and push manager-web
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile-web
          push: true
          tags: |
            ${{ env.IS_VERSION == 'true' && format('docker.io/{0}:web_{1}\ndocker.io/{0}:web_latest', env.REPO_NAME, env.VERSION) || format('docker.io/{0}:web_latest', env.REPO_NAME) }}
          platforms: linux/amd64,linux/arm64
